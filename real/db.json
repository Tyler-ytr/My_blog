{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/Tyler.png","path":"img/Tyler.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.min.js","path":"js/main.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.min.js","path":"js/search.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/indigo/.editorconfig","hash":"67a03b88eadd7810f2e01866e73814074ecd3b87","modified":1579549732980},{"_id":"themes/indigo/LICENSE","hash":"9dd0f70bc72c9d575447655526aded395bb93754","modified":1579549732980},{"_id":"themes/indigo/README.md","hash":"cfc7d09fc2ce26003954d647e3bbf98f71574eb7","modified":1579549732980},{"_id":"themes/indigo/_config.yml","hash":"ae795dfeca9e7155e2067d33dfc8b0d954a7dfb7","modified":1579621512400},{"_id":"themes/indigo/package.json","hash":"3ad9b9ccb1ddaad3136f179a7ebff7d7b1c193f7","modified":1579549732980},{"_id":"source/_posts/cmd_vs_rsa.md","hash":"7f829fa24cb1a253ef87dcbb5284515ab73a2727","modified":1597062708190},{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579548025723},{"_id":"source/_posts/ubuntu-back.md","hash":"84a455aa696444e1659d1c87911b7e4d8c08253d","modified":1579851764138},{"_id":"source/_posts/winter-learning-plan.md","hash":"baf5da0d7efcddfb5459f4a2aed8bb7ee3b87bb3","modified":1579685007545},{"_id":"source/categories/index.md","hash":"a8584a616ff0e93f70467e86277c32e189aeb28a","modified":1579620008183},{"_id":"source/friends/index.md","hash":"4fe37ae0f6d3f09ba63abc3c82603ba02c19a0c8","modified":1579684536371},{"_id":"source/tags/index.md","hash":"452c321874856a2cbee66259897fe7255563ad41","modified":1579619949171},{"_id":"themes/indigo/languages/en.yml","hash":"ba78def0453d08172248e220a1f9e145e99b4f23","modified":1579549732980},{"_id":"themes/indigo/languages/ja.yml","hash":"65a32717335211a45771a21fb7d7778808c6f0aa","modified":1579549732980},{"_id":"themes/indigo/languages/zh-CN.yml","hash":"6806e4c305facf19cbe4e37ccc5d6b00cb56e199","modified":1579549732980},{"_id":"themes/indigo/languages/nl-NL","hash":"b540b76af76c1a180c517089ed2ad770cbded170","modified":1579549732980},{"_id":"themes/indigo/languages/zh-TW.yml","hash":"9b8bdd9c8b68716f364503926dca6ba8571ee5ff","modified":1579549732980},{"_id":"themes/indigo/layout/categories.ejs","hash":"efae06b4d83aaf73ab93260381e891825bf404ac","modified":1579549732980},{"_id":"themes/indigo/layout/archive.ejs","hash":"6897178ba358379d6a4b7c0ba1bc2ab97ad5303a","modified":1579549732980},{"_id":"themes/indigo/layout/category.ejs","hash":"e5ba5cc2e092c199285b8097ef12ffe70bf84c91","modified":1579549732980},{"_id":"themes/indigo/layout/index.ejs","hash":"772c1985c7743e101598b4eddc253f9174c5605b","modified":1579549732980},{"_id":"themes/indigo/layout/layout.ejs","hash":"770af84fff104c398ce8b6c995130cddd3e9a1e9","modified":1579549732980},{"_id":"themes/indigo/layout/page.ejs","hash":"567c42b978da4c39b8b4982df19b940c26bc32a4","modified":1579549732980},{"_id":"themes/indigo/layout/post.ejs","hash":"efc3352828351f8574c51e8a93dc56c66660c3b1","modified":1579549732980},{"_id":"themes/indigo/layout/tag.ejs","hash":"90a231dea3a364b329a740e5d6c49c8cf5664fe9","modified":1579549732980},{"_id":"themes/indigo/layout/tags.ejs","hash":"1fc0461e9602b53899ec756e4361beb8cce74740","modified":1579549732980},{"_id":"themes/indigo/scripts/plugins.js","hash":"00ea278ea77733f546439aed507ce69a298da362","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"c294c98617ce14082f9b3d5eec83328f480f5597","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"1351dbfca311f0d50a939f9e1a91c4f65bbcdf5f","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"c78444f5b350ca79b260361bf3e5b6361d2661ba","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"9dfc591ec6c918c5b60b6ccbc5d1e18fea9faf8e","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"648db446567a81371b8a29d719d13636aa157012","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"8b3e037dd5f3d4564012689c5cd6f63caf73df0f","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"7208d4083ee3355aa969972a2ce249a67d56b3a6","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"ea6aded24a68de0914f24b3760f766b5e1c9835a","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/paginator.ejs","hash":"13952250463f70d1c1bbbfdd7f4ee8160dd6d99b","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"20597ac0d547aea37680ecf195eb129fe5ee19d8","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"b28106b35a9fc63eefa69c2ca8b923eb1f731832","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"752109904304fdb8e988ee1254df2af9c0701466","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/tags-bar.ejs","hash":"30ec74f081cc4c273a7bcd5d57da99072e9f0755","modified":1579549732980},{"_id":"themes/indigo/source/css/style.less","hash":"cf362925ae099b810fd5763e6b724b823612ed15","modified":1579549733012},{"_id":"themes/indigo/source/img/Tyler.png","hash":"2b7d294c336ac48cb181010451d2cc2cabbe749a","modified":1579621221218},{"_id":"themes/indigo/source/img/alipay.jpg","hash":"6054d9ed2ca7cd1f645b729e05632134467d4daa","modified":1579549733012},{"_id":"themes/indigo/source/img/avatar.jpg","hash":"62a4893b1a32e997dcdb6e467b10559df75221e2","modified":1579549733012},{"_id":"themes/indigo/source/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1579549733012},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1579549733012},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1579549733012},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1579549733012},{"_id":"themes/indigo/source/img/wechat.jpg","hash":"ef069cc9e80c7553fd60589b0727bbbf8c6de372","modified":1579549733012},{"_id":"themes/indigo/source/js/main.js","hash":"ff44bb7b2f1f08757093fd6ffa92c9ac2b674109","modified":1579549733012},{"_id":"themes/indigo/source/js/main.min.js","hash":"e77a89fe5a9827ac590a288778176b233dd900ad","modified":1579549733012},{"_id":"themes/indigo/source/js/search.js","hash":"a4d6c9c566ec1ca71ddacfd14c58f7ddaf9db24d","modified":1579549733012},{"_id":"themes/indigo/source/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1579549733012},{"_id":"themes/indigo/layout/_partial/plugins/baidu.ejs","hash":"da1355eea131952031e54c45560555e6d3aa5a33","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/disqus.ejs","hash":"86fe837ab16cb60754b0a73bb9efa38b04f3023f","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/dynamic-title.ejs","hash":"3b877868c4a6fc217ea6f3314544830280a77472","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/gitalk.ejs","hash":"8a0c390ed475600c627bcfa41df15a54f60eca3c","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/gitment.ejs","hash":"5f6ceb7f4b9b579e8e3f87894447f556a53f9385","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/google-analytics.ejs","hash":"b5b87761751a897949e085a8f1ace78b0b8babd5","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/hyper-comments.ejs","hash":"d0e6f1d713e7a1c0cc5fe25f3e574a4b791f938a","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/mathjax.ejs","hash":"3a5c9f7d22d30cd8ffa4e83a8d3976db22815994","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/page-visit.ejs","hash":"bb9deb32c54ea6820f622b923e62592915e9f21f","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/site-visit.ejs","hash":"a2c247c2e32016563dd6a22c21474072d93f4dbd","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/tajs.ejs","hash":"ef9c77d8c6e004b014c83c5f9333e7174f8bafa3","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/uyan.ejs","hash":"ddf290e90dc1c779f42a48e1bd852ca932148dfb","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/plugins/valine.ejs","hash":"0a6245da90d54177441d32a6f1766b4f434660db","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c08e44cbd7315dec7afb6054b04d3c7b82c3bde8","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"2751d0f694f72bb886664ace021d698ea0e8f0c7","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/copyright.ejs","hash":"dd1dcc7776021ab3d68065f8532efead4c2b8051","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"c5adcec8db1506c378d39855a697e1bb1165646c","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"f137c126672769e9571be2bb0a70ea8dda644b0e","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"03719097851575a2c1bb95774058b224f6402a1f","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/reward-btn.ejs","hash":"b46160005224821a439dec9f1ff183e2f66d9f4b","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"097c0276a61665e5ee96e5d5d85a7d6ae5ab2f49","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/share-fab.ejs","hash":"2ec7de870988cfbc8ea9872cddf7e4076ac64a57","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"7d79a67b3e5e6989f22fb0e0904fa540bfca5fcc","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"412894001b1ac6e63012b26b1109a0856651c076","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"eaad7af7888bddd7095243a43ff38f55ad8c494a","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/toc.ejs","hash":"d534b888d24df7703c632539d4bdd638fa764e98","modified":1579549732980},{"_id":"themes/indigo/layout/_partial/post/updated.ejs","hash":"00fedf7971c0bda0623d968bc0614e512d19a985","modified":1579549732980},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"382fc22cd5cc073e881768a65600d97eba9f1d21","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"f047c8ca92f9e6a8e1299ace0cce91514631a21c","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"bad63006b3bd4849bf53ad38482af0d9971061d3","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"880b4a28e97d556ed15b07642d25115f9b6ba4f6","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"99e48793dc0b4ffb66ecaf2d1315145872f9bb98","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"5f783f34bf093e654e8922ed4a2af8b7b2cd41c4","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/lightbox.less","hash":"38419aaf3c1832e84ade331f051f110fdc8b960f","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"85157ddf3877b5c58e8f1d737dda3dfb1bfd540b","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/page.less","hash":"33b0a5edcedc26a4c592c812c5785bb20d3c93db","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"516cded3c7f1db4cacfa898bcaf0adfae7f3a2e1","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"f5e89ea5414e3096a28c8c96e86c3f669040a892","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/roboto.less","hash":"3e457942995da8840e7662fa6cb551a7e12ea294","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"dbc23e77e586ee682a21475f5eb568628ea6720f","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"a683c96a59470efd35722b763c55149a46e35156","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"01eb7f84193180928a6ed4796ee8802f6c1628e7","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"3232e75f4653402c9fbd7bda5b97c05ecc31db2b","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"a02eaa601887f947257f6016679b62dc96a61c0c","modified":1579549732996},{"_id":"themes/indigo/source/css/_plugin/valine.less","hash":"b8f8d8037fb3c8525da12e580bd9e2ff9f298132","modified":1579549732996},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"a3ecbd6ccf5b56ac39df710c34a149b82989a498","modified":1579549732996},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1579549732996},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1579549732996},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1579549732996},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1579549732996},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1579549732996},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1579549732996},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1579549732996},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1579549733012},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1579549732996},{"_id":"public/atom.xml","hash":"c8fca7381546813d83c5d91cff4a1fd7c3d01db2","modified":1598010379296},{"_id":"public/content.json","hash":"95f5b4b572756e20be179a102f70e1a556e2563b","modified":1598010379296},{"_id":"public/sitemap.xml","hash":"5a817d1191ff5ee5de4e7850044bba2adac05e42","modified":1598010379296},{"_id":"public/categories/index.html","hash":"839f68316f06fd3e9d8cc05b8350fcf104f751de","modified":1598010379296},{"_id":"public/friends/index.html","hash":"06720317971a8b202a7a64a71c7cfd935541eb50","modified":1598010379296},{"_id":"public/tags/index.html","hash":"3dd8ea11358cc7e72c91127a7df7905e5b24bec4","modified":1598010379296},{"_id":"public/2020/08/10/cmd_vs_rsa/index.html","hash":"f1d8d9414c0f27ee78da0d23caaf4999946a59d4","modified":1598010379296},{"_id":"public/categories/个人计划/index.html","hash":"1840668e0eb82942ceadc13b6ce6d271e6ebffe2","modified":1598010379296},{"_id":"public/categories/个人总结/index.html","hash":"25312249535481a8b93ca631e09b3dd186116193","modified":1598010379296},{"_id":"public/archives/index.html","hash":"02a0d2945c2c38f6042a00d478159460dd7a31ef","modified":1598010379296},{"_id":"public/archives/2020/index.html","hash":"24c9f6c3f668b00b80de25994197020f7a4c5229","modified":1598010379296},{"_id":"public/archives/2020/01/index.html","hash":"cdfe4b03737710a464092972e2450f2c23e8cb26","modified":1598010379296},{"_id":"public/archives/2020/08/index.html","hash":"ce9c1b22b365c2fb5961bd68c333bd868fdbc7d4","modified":1598010379296},{"_id":"public/index.html","hash":"e99fe0caa0dc4951db3543a50286b9cb97a97a9d","modified":1598010379296},{"_id":"public/tags/flag/index.html","hash":"b2f7b41290900f140141f4a6a0af1e9d0e205c4c","modified":1598010379296},{"_id":"public/2020/01/22/ubuntu-back/index.html","hash":"06f579552ec69979987d35846efb51df4ec215ea","modified":1598010379296},{"_id":"public/2020/01/22/winter-learning-plan/index.html","hash":"ca271414dc8dde4013ef0b5a0925796fe85153eb","modified":1598010379296},{"_id":"public/2020/01/21/hello-world/index.html","hash":"b37a87da824d1d144fa24af5ac410b2272edc3cf","modified":1598010379296},{"_id":"public/tags/教程/index.html","hash":"134c32061a3a1a69e57424b1c1406c98601ad597","modified":1598010379296},{"_id":"public/img/avatar.jpg","hash":"62a4893b1a32e997dcdb6e467b10559df75221e2","modified":1598010379296},{"_id":"public/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1598010379296},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1598010379296},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1598010379296},{"_id":"public/img/wechat.jpg","hash":"ef069cc9e80c7553fd60589b0727bbbf8c6de372","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1598010379296},{"_id":"public/live2dw/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1598010379296},{"_id":"public/live2dw/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1598010379296},{"_id":"public/live2dw/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1598010379296},{"_id":"public/live2dw/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1598010379296},{"_id":"public/live2dw/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1598010379296},{"_id":"public/live2dw/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1598010379296},{"_id":"public/live2dw/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1598010379296},{"_id":"public/live2dw/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1598010379296},{"_id":"public/live2dw/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1598010379296},{"_id":"public/live2dw/assets/tororo.model.json","hash":"3b96ea33460642d288c98327444966d93a0c11ba","modified":1598010379296},{"_id":"public/live2dw/assets/tororo.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1598010379296},{"_id":"public/img/Tyler.png","hash":"2b7d294c336ac48cb181010451d2cc2cabbe749a","modified":1598010379296},{"_id":"public/img/alipay.jpg","hash":"6054d9ed2ca7cd1f645b729e05632134467d4daa","modified":1598010379296},{"_id":"public/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1598010379296},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1598010379296},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1598010379296},{"_id":"public/js/search.js","hash":"a1de7e7a2ef8330ebcd9f3a7a4622b3bac44e4f3","modified":1598010379296},{"_id":"public/js/main.min.js","hash":"8acf4480f8ab859423b8926b9b790c67b5a77276","modified":1598010379296},{"_id":"public/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1598010379296},{"_id":"public/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1598010379296},{"_id":"public/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1598010379296},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1598010379296},{"_id":"public/js/main.js","hash":"300b2e963683ced162e28afcd24ffc970fc23ac2","modified":1598010379296},{"_id":"public/live2dw/assets/moc/tororo.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1598010379296},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1598010379296},{"_id":"public/live2dw/assets/moc/tororo.2048/texture_00.png","hash":"98af764b541083e87fc2f8e85f02d2db38c898cc","modified":1598010379296},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1598010379296},{"_id":"public/css/style.css","hash":"4f59712181405c963fe7e80740071022050bc096","modified":1598010379296}],"Category":[{"name":"个人计划","_id":"cke464crk0004t8v268bxbdxr"},{"name":"个人总结","_id":"cke464cs0000bt8v2djgs4q7c"}],"Data":[],"Page":[{"title":"categories","date":"2020-01-21T15:19:53.000Z","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-01-21 23:19:53\nlayout: categories\ncomments: false\n---\n","updated":"2020-01-21T15:20:08.183Z","path":"categories/index.html","_id":"cke464cra0001t8v2bw04aaj2","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"friends","date":"2020-01-21T15:37:18.000Z","_content":"- [FOREWING'S BLOG(容酱)](https://jbesu.com/)\t\n- [Maxwell Lyu(小林)](https://maxwell-lyu.github.io/)\n- [doowzs's blog(阿姨)](https://doowzs.com)\n- [tristonk's blog ](http://www.tristonk.com/)","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2020-01-21 23:37:18\n---\n- [FOREWING'S BLOG(容酱)](https://jbesu.com/)\t\n- [Maxwell Lyu(小林)](https://maxwell-lyu.github.io/)\n- [doowzs's blog(阿姨)](https://doowzs.com)\n- [tristonk's blog ](http://www.tristonk.com/)","updated":"2020-01-22T09:15:36.371Z","path":"friends/index.html","comments":1,"layout":"page","_id":"cke464cry0008t8v2do80ccqx","content":"<ul>\n<li><a href=\"https://jbesu.com/\" target=\"_blank\" rel=\"noopener\">FOREWING’S BLOG(容酱)</a>    </li>\n<li><a href=\"https://maxwell-lyu.github.io/\" target=\"_blank\" rel=\"noopener\">Maxwell Lyu(小林)</a></li>\n<li><a href=\"https://doowzs.com\" target=\"_blank\" rel=\"noopener\">doowzs’s blog(阿姨)</a></li>\n<li><a href=\"http://www.tristonk.com/\" target=\"_blank\" rel=\"noopener\">tristonk’s blog </a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><a href=\"https://jbesu.com/\" target=\"_blank\" rel=\"noopener\">FOREWING’S BLOG(容酱)</a>    </li>\n<li><a href=\"https://maxwell-lyu.github.io/\" target=\"_blank\" rel=\"noopener\">Maxwell Lyu(小林)</a></li>\n<li><a href=\"https://doowzs.com\" target=\"_blank\" rel=\"noopener\">doowzs’s blog(阿姨)</a></li>\n<li><a href=\"http://www.tristonk.com/\" target=\"_blank\" rel=\"noopener\">tristonk’s blog </a></li>\n</ul>\n"},{"title":"tags","date":"2020-01-21T15:16:47.000Z","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-01-21 23:16:47\nlayout: tags\ncomments: false\n---\n","updated":"2020-01-21T15:19:09.171Z","path":"tags/index.html","_id":"cke464crz000at8v2gy23605e","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"_content":"## 关于windows密钥登录服务器\n\n前言:windows的权限管理太屑了\n\n参考https://blog.csdn.net/joshua2011/article/details/90208741","source":"_posts/cmd_vs_rsa.md","raw":"## 关于windows密钥登录服务器\n\n前言:windows的权限管理太屑了\n\n参考https://blog.csdn.net/joshua2011/article/details/90208741","slug":"cmd_vs_rsa","published":1,"date":"2020-08-10T12:30:55.848Z","updated":"2020-08-10T12:31:48.190Z","title":"cmd_vs_rsa","comments":1,"layout":"post","photos":[],"link":"","_id":"cke464cr40000t8v2561m3rlt","content":"<h2 id=\"关于windows密钥登录服务器\"><a href=\"#关于windows密钥登录服务器\" class=\"headerlink\" title=\"关于windows密钥登录服务器\"></a>关于windows密钥登录服务器</h2><p>前言:windows的权限管理太屑了</p>\n<p>参考<a href=\"https://blog.csdn.net/joshua2011/article/details/90208741\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/joshua2011/article/details/90208741</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于windows密钥登录服务器\"><a href=\"#关于windows密钥登录服务器\" class=\"headerlink\" title=\"关于windows密钥登录服务器\"></a>关于windows密钥登录服务器</h2><p>前言:windows的权限管理太屑了</p>\n<p>参考<a href=\"https://blog.csdn.net/joshua2011/article/details/90208741\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/joshua2011/article/details/90208741</a></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2020-01-20T19:20:25.723Z","updated":"2020-01-20T19:20:25.723Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke464crb0002t8v24cis4s5p","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"Winter plan","date":"2020-01-22T09:17:23.000Z","_content":"\n- 需要完成的目标:\n  - 线性代数复习\n  - 学习cs224n\n  - 刷leetcode\n  - 算法竞赛入门经典\n\n- 目前进度:\n  - 线性代数: \n    - 1.22 \n  - cs224n\n    - 1.22 \n  - leetcode\n    - 1.22 \n  - 算法竞赛入门经典","source":"_posts/winter-learning-plan.md","raw":"---\ntitle: Winter plan\ndate: 2020-01-22 17:17:23\ntags:\n\t- flag\ncategories:\n\t- 个人计划\n---\n\n- 需要完成的目标:\n  - 线性代数复习\n  - 学习cs224n\n  - 刷leetcode\n  - 算法竞赛入门经典\n\n- 目前进度:\n  - 线性代数: \n    - 1.22 \n  - cs224n\n    - 1.22 \n  - leetcode\n    - 1.22 \n  - 算法竞赛入门经典","slug":"winter-learning-plan","published":1,"updated":"2020-01-22T09:23:27.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke464crc0003t8v2bksx9tov","content":"<ul>\n<li><p>需要完成的目标:</p>\n<ul>\n<li>线性代数复习</li>\n<li>学习cs224n</li>\n<li>刷leetcode</li>\n<li>算法竞赛入门经典</li>\n</ul>\n</li>\n<li><p>目前进度:</p>\n<ul>\n<li>线性代数: <ul>\n<li>1.22 </li>\n</ul>\n</li>\n<li>cs224n<ul>\n<li>1.22 </li>\n</ul>\n</li>\n<li>leetcode<ul>\n<li>1.22 </li>\n</ul>\n</li>\n<li>算法竞赛入门经典</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><p>需要完成的目标:</p>\n<ul>\n<li>线性代数复习</li>\n<li>学习cs224n</li>\n<li>刷leetcode</li>\n<li>算法竞赛入门经典</li>\n</ul>\n</li>\n<li><p>目前进度:</p>\n<ul>\n<li>线性代数: <ul>\n<li>1.22 </li>\n</ul>\n</li>\n<li>cs224n<ul>\n<li>1.22 </li>\n</ul>\n</li>\n<li>leetcode<ul>\n<li>1.22 </li>\n</ul>\n</li>\n<li>算法竞赛入门经典</li>\n</ul>\n</li>\n</ul>\n"},{"title":"ubuntu教程","date":"2020-01-22T08:28:15.000Z","_content":"## 反思\n-   之前崩的原因是搜狗输入法安装的时候没有提前安装fcix框架,导致乱码然后系统就傻掉了;\n-   重装很多次的原因是因为没有在重装之前完全的格式化分区,我建议每一次玩具坏了都要用windows格式化一次呜呜呜\n\n## 复活操作\n\n#### 基本配置\n- 管理员权限,换源,安装vim\n    <pre><code>  sudo passwd(修改sudo密码)\n    sudo apt-get update\n    sudo apt-get install vim\n    </code></pre>\n-   更换国内源,这里我选择的是[清华源](https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/)用下面的命令打开文件,并且注释里面的所有内容,\n     <pre><code> sudo vim /etc/apt/sources.list\n    </code></pre> \n    -   然后粘贴下面的内容到打开的文件里面\n    <pre><code># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释\n    deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\n    deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n    deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n    deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n    </code></pre>\n    如果你学过vim,就知道:w :q的含义,如果没有可以在终端使用vimtutor学习一下;\n-   安装搜狗输入法(之前几次都因为它炸了我不信了……)，我参考了这一篇[博客]( https://blog.csdn.net/qq_33159059/article/details/85019467)\n-   然后搭建基本的C语言环境,主要参考啦蒋老师的PA讲义\n    <pre><code>su\n    apt-get install build-essential\n    apt-get install man                # on-line reference manual\n    apt-get install gcc-doc            # manual for GCC\n    apt-get install gdb                # GNU debugger\n    apt-get install git                # reversion control system\n    apt-get install libreadline-dev    # a library to use compile the project later\n    apt-get install libsdl2-dev        # a library to use compile the project later\n    apt-get install qemu-system-x86    # QEMU\n    </code></pre>\n-   安装chrome:请使用bing搜索;用gmail同步很香;\n\n#### 科学的看世界\n-  我选择的是shadowsocks-libev(因为我qt5以及普通的pip安装的shadowsocks就没有成功过)\n    <pre><code> mkdir shadowsocks\n    cd shadowsocks\n    touch shadowsocks.json\n    vim shadowsocks.json\n    </code></pre>\n-   将下面的内容根据自己的配置放进去:\n    <pre><code>\n    {\n      \"server\":\"my_server_ip\",\n      \"server_port\":53450,\n      \"local_address\": \"127.0.0.1\",\n      \"local_port\":1080,\n      \"password\":\"密码\",\n      \"timeout\":300,\n      \"method\":\"aes-256-gcm\",\n      \"fast_open\": false\n    }\n    </code></pre>\n-   然后: ss-local -c ~/shadowsocks/shadowsocks/json & \n    自己测试一下有没有问题;\n-   感谢阿姨的提醒,我决定用别名+脚本来启动shadowsocks(因为每次开机输入上面的东西实在没有效率)：\n    -   先写一个自启动脚本：\n    <pre><code> touch ~/.ssstart.sh\n     vim ~/.ssstart.sh\n    </code></pre>\n    内容是:\n    <pre><code>#!/bin/bash\n    ss-local -c ~/shadowsocks/shadowsocks.json \n    </code></pre>\n    -   然后在终端里面起别名:\n    <pre><code>vim ~/.bashrc\n    在末尾添加:\n    alias ss='. ~/.ssstart.sh'\n    :wq 保存,退出\n    在终端里面: \n    source ~/.bashrc\n    (如果是zsh:source ~/.zshrc)\n    </code></pre>\n    尝试一下在终端输入ss,它lei了;\n-  因为后面的netdata需要**终端**翻墙,我也就尝试了一下,如果没有需求可以跳过这一步:\n    -   主要参考的是谷歌出来的[网站](http://www.totorocyx.me/2018/10/02/ubuntu_shadowsocks/)\n    -   首先用pip -V康康有没有pip,没有的话使用sudo apt-get install python-pip安装\n    -   下面尝试全局代理(我也不确定能不能成功)：\n        -   sudo pip install genpac\n        -   选择安装配置文件的目录,我选择的是:<pre><code>/home/larryytr/shadowsocks</code></pre>\n        -   然后执行以下命令:<pre><code>sudo genpac --proxy=\"SOCKS5 127.0.0.1:1080\" --gfwlist-proxy=\"SOCKS5 127.0.0.1:1080\" -o autoproxy.pac --gfwlist-url=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt\"</code></pre>\n        -   下面是一句搬运,我没有遇到过:<pre><code>注意：如果报错“fetch gfwlist fail.online: https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt local:None”，可以使用后面的语句：sudo genpac --proxy=\"SOCKS5 127.0.0.1:1080\" -o autoproxy.pac --gfwlist-url=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt\"\n        </pre></code>\n        -   执行完之后,目录下面会有一个autoproxy.pac文件。\n        -   然后在右上角,打开系统设置——网络——网络代理：“方法”选择“自动”，“配置URL”填写：\n            \n            <pre><code>file:///home/larryytr/shadowsocks/autoproxy.pac (请根据自己的实际情况修改)</code></pre>\n    -   然后使得终端也能使用代理。我们需要**privoxy**代理工具:\n        - 安装很自然:sudo apt-get install privoxy\n        \n        - 然后编辑配置文件<pre><code>sudo vim /etc/privoxy/config </pre></code>\n        \n        -   在文档中搜索(vim 使用/搜索)“**listen-address**”（即监听地址），找到如下一行：**listen-address localhost:8118** 确保它没有被注释（如果这一行有#号，就手动删除）。再查找“**forward-socks5t**”，找到如下一行：**forward-socks5t / 127.0.0.1:1080** . 同样确保它没有被注释。如果没有这一行，就手动添加（注意！句尾那个点 . 是要写的！）。然后保存退出，再执行以下命令启动privoxy：\n            \n            ````\n            sudo privoxy --user privoxy /etc/privoxy/config\n            ````\n            \n        -   最后，再配置/etc/profile：<pre><code>\n                # 先进入编辑模式\n            sudo vim /etc/profile\n                 # 在末尾添加以下三行：\n            export http_proxy=http://127.0.0.1:8118\n            export https_proxy=http://127.0.0.1:8118\n            export ftp_proxy=http://127.0.0.1:8118\n                # 退出之后记得执行\n                source /etc/profile\n            </code></pre>\n            \n        - 验证是否成功:curl www.google.com或wget www.google.com判断是否可以访问\n        \n        -  HINT(请务必注意):使用proxy的时候没有办法提交os作业,要make submit之前,先进入配置文件(/etc/privoxy/config)把刚刚做的事情给注释掉,然后用上面的命令重启privoxy,最后就可以提交了！！！\n\n\n#### 优化美化\n-   官网安装网易云\n-   官网安装vscode\n-   配置zsh,tmux,vim:\n\n##### zsh安装与美化\n-   学习了:https://www.sysgeek.cn/install-zsh-shell-ubuntu-18-04/ \nhttps://segmentfault.com/a/1190000013612471这两篇教程;\n-   感谢何伟的配置文件;\n-   相应的setting请参考我的github[相关内容](https://github.com/larryytr/Note_for_blog/tree/master/ubuntu).\n-   安装zsh:\n    <pre><code>sudo apt-get update\n\tsudo apt-get install zsh\n\tchsh -s /bin/zsh (设置zsh为默认)\n    </code></pre>\n-   重启你的ubuntu\n-   安装oh-my-zsh插件:\n    <pre><code> wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh\n    </code></pre>\n- 不改theme一无所有\n- 准备使用powerline主题  \n-   首先安装powerline字体：\n    <pre><code>\n    git clone https://github.com/powerline/fonts.git --depth=1\n    # install\n    cd fonts\n    ./install.sh\n    # clean-up a bit\n    cd ..\n    rm -rf fonts\n    </code></pre>\n- 安装完字体之后要记得使用：终端-编辑-首选项-文本-文本外观-自定义字体打勾-选一个带有powerline的。(星际玩家找了好久)\n-   安装powerline: sudo apt install powerline \n-   我的配置见[相关内容](https://github.com/larryytr/Note_for_blog/tree/master/ubuntu)的setting .zshrc\n-   颜色选择困难请: <pre><code>for code ({000..255}) print -P -- \"$code: %F{$code}This is how your text would look like%f\"</code></pre>\n-   改完请source ~/.zshrc\n\n##### tmux\n-   tmux是一个很优秀的分屏软件,介绍可以看jyy的PA讲义以及自己搜索教程;\n-   我使用了何伟的配置,具体见[相关内容](https://github.com/larryytr/Note_for_blog/tree/master/ubuntu)的setting\n-  我又加了一个插件使得tmux在重启之后状态可以恢复:\n    -   主要参考这个[知乎教程](https://zhuanlan.zhihu.com/p/24660412)\n    -   <pre><code>git clone https://github.com/tmux-plugins/tmux-resurrect ~/tmux_tmp\n        </code></pre>\n    -   在~/.tmux.conf.local里面加上:\n        <pre><code>run-shell ~/tmux_tmp/resurrect.tmux\n        </code></pre>\n    -   最后载入这个配置：<pre><code>tmux source-file ~/.tmux.conf\n        </code></pre>\n\n##### vim的美化\n-   使用啦懒人vim: spf13-vim美化\n-   请看[相关内容](https://github.com/larryytr/Note_for_blog/tree/master/ubuntu)的setting，找到并且下载spf13-vim.sh,然后bash spf13-vim.sh\n-   我的配置同样在[相关内容](https://github.com/larryytr/Note_for_blog/tree/master/ubuntu)的setting里面;\n-   这个时候的vim没有办法和系统剪切版交互,我根据https://www.cnblogs.com/memory4young/p/could-not-use-system-clipboard-in-vim.html 下载了其他一些插件:\n    <pre><code>sudo apt-get install vim-scripts vim-gtk vim-gnome</pre></code>\n    这样 vim --version|grep \"cliboard\" 会看到 +clipboard;\n    然后就可以用+y,+p实现系统剪切版和vim剪切版的交互啦！\n\n#### 其他内容:\n- OSlab还需要:\n  - sudo apt-get install curl\n  - sudo apt-get install gcc-multilib\n- git 配置请搜索廖雪峰\n- ctags 可以参考Mengzelev的[博客](https://mengzelev.github.io/2018/10/04/pa-inspirations/)\n-   感谢xnr给我推荐的network来查看linux的运行情况\n    -   这是netdata的官方网站:https://github.com/netdata/netdata#user-base\n    -   但是由于GFW,安装会出现报错,事实上需要终端翻墙才行\n    -   可以通过这篇[教程](https://blog.csdn.net/zhangvalue/article/details/80270169)\n        <pre><code> sudo apt-get install net-tools\n          ifconfig\n        </code></pre>\n        查看inet 之后的内容来得知自己的server_ip\n    -   成功之后,进入 http://127.0.0.1:19999/ (:19999前面的是自己的server_ip地址,请按需要更改),得到炫酷的体验\n    -   相应配置可以参考这篇[博客](https://cloud.tencent.com/developer/article/1181577)或者自己搜索\n-   OSlab的kvm bug处理方法：https://bugzilla.redhat.com/show_bug.cgi?id=1479558\n    <pre><code>chmod 666 /dev/kvm to get it working right now. Then to fix future reboots, create a file /lib/udev/rules.d/99-kvm.rules with this content:\n    KERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\"</code></pre>\n-   texlive 安装\n    <pre><code>sudo apt install texlive-full</code></pre>\n    相关的vscode配置可以抄我的[setting](https://github.com/larryytr/Note_for_blog/tree/master/setting)\n    vscode的保存即编译请<pre><code>Ctrl+Shift+p,搜索setting,搜索Build,Latex-workshop › Synctex › After Build: Enabled打勾；</code></pre>\n-   ubuntu的截图:我参考了这篇[博客](https://blog.csdn.net/qq_17448289/article/details/56480805)\n    -   打开右上角的设置-->设备-->键盘-->快捷键,点击+\n    -   显然的配置好按键,然后在命令里面写<pre><code>gnome-screenshot -a</code></pre>\n    -   hint:上面的命令终端输入也有效\n        截屏的图在文件夹的图片(picture)里面;\n\n#### To be continued\n-   有空再研究怎么换主题;\n","source":"_posts/ubuntu-back.md","raw":"---\ntitle: ubuntu教程\ndate: 2020-01-22 16:28:15\ntags:\n- 教程\ncategories:\n- 个人总结\n---\n## 反思\n-   之前崩的原因是搜狗输入法安装的时候没有提前安装fcix框架,导致乱码然后系统就傻掉了;\n-   重装很多次的原因是因为没有在重装之前完全的格式化分区,我建议每一次玩具坏了都要用windows格式化一次呜呜呜\n\n## 复活操作\n\n#### 基本配置\n- 管理员权限,换源,安装vim\n    <pre><code>  sudo passwd(修改sudo密码)\n    sudo apt-get update\n    sudo apt-get install vim\n    </code></pre>\n-   更换国内源,这里我选择的是[清华源](https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/)用下面的命令打开文件,并且注释里面的所有内容,\n     <pre><code> sudo vim /etc/apt/sources.list\n    </code></pre> \n    -   然后粘贴下面的内容到打开的文件里面\n    <pre><code># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释\n    deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\n    deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n    deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n    deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n    </code></pre>\n    如果你学过vim,就知道:w :q的含义,如果没有可以在终端使用vimtutor学习一下;\n-   安装搜狗输入法(之前几次都因为它炸了我不信了……)，我参考了这一篇[博客]( https://blog.csdn.net/qq_33159059/article/details/85019467)\n-   然后搭建基本的C语言环境,主要参考啦蒋老师的PA讲义\n    <pre><code>su\n    apt-get install build-essential\n    apt-get install man                # on-line reference manual\n    apt-get install gcc-doc            # manual for GCC\n    apt-get install gdb                # GNU debugger\n    apt-get install git                # reversion control system\n    apt-get install libreadline-dev    # a library to use compile the project later\n    apt-get install libsdl2-dev        # a library to use compile the project later\n    apt-get install qemu-system-x86    # QEMU\n    </code></pre>\n-   安装chrome:请使用bing搜索;用gmail同步很香;\n\n#### 科学的看世界\n-  我选择的是shadowsocks-libev(因为我qt5以及普通的pip安装的shadowsocks就没有成功过)\n    <pre><code> mkdir shadowsocks\n    cd shadowsocks\n    touch shadowsocks.json\n    vim shadowsocks.json\n    </code></pre>\n-   将下面的内容根据自己的配置放进去:\n    <pre><code>\n    {\n      \"server\":\"my_server_ip\",\n      \"server_port\":53450,\n      \"local_address\": \"127.0.0.1\",\n      \"local_port\":1080,\n      \"password\":\"密码\",\n      \"timeout\":300,\n      \"method\":\"aes-256-gcm\",\n      \"fast_open\": false\n    }\n    </code></pre>\n-   然后: ss-local -c ~/shadowsocks/shadowsocks/json & \n    自己测试一下有没有问题;\n-   感谢阿姨的提醒,我决定用别名+脚本来启动shadowsocks(因为每次开机输入上面的东西实在没有效率)：\n    -   先写一个自启动脚本：\n    <pre><code> touch ~/.ssstart.sh\n     vim ~/.ssstart.sh\n    </code></pre>\n    内容是:\n    <pre><code>#!/bin/bash\n    ss-local -c ~/shadowsocks/shadowsocks.json \n    </code></pre>\n    -   然后在终端里面起别名:\n    <pre><code>vim ~/.bashrc\n    在末尾添加:\n    alias ss='. ~/.ssstart.sh'\n    :wq 保存,退出\n    在终端里面: \n    source ~/.bashrc\n    (如果是zsh:source ~/.zshrc)\n    </code></pre>\n    尝试一下在终端输入ss,它lei了;\n-  因为后面的netdata需要**终端**翻墙,我也就尝试了一下,如果没有需求可以跳过这一步:\n    -   主要参考的是谷歌出来的[网站](http://www.totorocyx.me/2018/10/02/ubuntu_shadowsocks/)\n    -   首先用pip -V康康有没有pip,没有的话使用sudo apt-get install python-pip安装\n    -   下面尝试全局代理(我也不确定能不能成功)：\n        -   sudo pip install genpac\n        -   选择安装配置文件的目录,我选择的是:<pre><code>/home/larryytr/shadowsocks</code></pre>\n        -   然后执行以下命令:<pre><code>sudo genpac --proxy=\"SOCKS5 127.0.0.1:1080\" --gfwlist-proxy=\"SOCKS5 127.0.0.1:1080\" -o autoproxy.pac --gfwlist-url=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt\"</code></pre>\n        -   下面是一句搬运,我没有遇到过:<pre><code>注意：如果报错“fetch gfwlist fail.online: https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt local:None”，可以使用后面的语句：sudo genpac --proxy=\"SOCKS5 127.0.0.1:1080\" -o autoproxy.pac --gfwlist-url=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt\"\n        </pre></code>\n        -   执行完之后,目录下面会有一个autoproxy.pac文件。\n        -   然后在右上角,打开系统设置——网络——网络代理：“方法”选择“自动”，“配置URL”填写：\n            \n            <pre><code>file:///home/larryytr/shadowsocks/autoproxy.pac (请根据自己的实际情况修改)</code></pre>\n    -   然后使得终端也能使用代理。我们需要**privoxy**代理工具:\n        - 安装很自然:sudo apt-get install privoxy\n        \n        - 然后编辑配置文件<pre><code>sudo vim /etc/privoxy/config </pre></code>\n        \n        -   在文档中搜索(vim 使用/搜索)“**listen-address**”（即监听地址），找到如下一行：**listen-address localhost:8118** 确保它没有被注释（如果这一行有#号，就手动删除）。再查找“**forward-socks5t**”，找到如下一行：**forward-socks5t / 127.0.0.1:1080** . 同样确保它没有被注释。如果没有这一行，就手动添加（注意！句尾那个点 . 是要写的！）。然后保存退出，再执行以下命令启动privoxy：\n            \n            ````\n            sudo privoxy --user privoxy /etc/privoxy/config\n            ````\n            \n        -   最后，再配置/etc/profile：<pre><code>\n                # 先进入编辑模式\n            sudo vim /etc/profile\n                 # 在末尾添加以下三行：\n            export http_proxy=http://127.0.0.1:8118\n            export https_proxy=http://127.0.0.1:8118\n            export ftp_proxy=http://127.0.0.1:8118\n                # 退出之后记得执行\n                source /etc/profile\n            </code></pre>\n            \n        - 验证是否成功:curl www.google.com或wget www.google.com判断是否可以访问\n        \n        -  HINT(请务必注意):使用proxy的时候没有办法提交os作业,要make submit之前,先进入配置文件(/etc/privoxy/config)把刚刚做的事情给注释掉,然后用上面的命令重启privoxy,最后就可以提交了！！！\n\n\n#### 优化美化\n-   官网安装网易云\n-   官网安装vscode\n-   配置zsh,tmux,vim:\n\n##### zsh安装与美化\n-   学习了:https://www.sysgeek.cn/install-zsh-shell-ubuntu-18-04/ \nhttps://segmentfault.com/a/1190000013612471这两篇教程;\n-   感谢何伟的配置文件;\n-   相应的setting请参考我的github[相关内容](https://github.com/larryytr/Note_for_blog/tree/master/ubuntu).\n-   安装zsh:\n    <pre><code>sudo apt-get update\n\tsudo apt-get install zsh\n\tchsh -s /bin/zsh (设置zsh为默认)\n    </code></pre>\n-   重启你的ubuntu\n-   安装oh-my-zsh插件:\n    <pre><code> wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh\n    </code></pre>\n- 不改theme一无所有\n- 准备使用powerline主题  \n-   首先安装powerline字体：\n    <pre><code>\n    git clone https://github.com/powerline/fonts.git --depth=1\n    # install\n    cd fonts\n    ./install.sh\n    # clean-up a bit\n    cd ..\n    rm -rf fonts\n    </code></pre>\n- 安装完字体之后要记得使用：终端-编辑-首选项-文本-文本外观-自定义字体打勾-选一个带有powerline的。(星际玩家找了好久)\n-   安装powerline: sudo apt install powerline \n-   我的配置见[相关内容](https://github.com/larryytr/Note_for_blog/tree/master/ubuntu)的setting .zshrc\n-   颜色选择困难请: <pre><code>for code ({000..255}) print -P -- \"$code: %F{$code}This is how your text would look like%f\"</code></pre>\n-   改完请source ~/.zshrc\n\n##### tmux\n-   tmux是一个很优秀的分屏软件,介绍可以看jyy的PA讲义以及自己搜索教程;\n-   我使用了何伟的配置,具体见[相关内容](https://github.com/larryytr/Note_for_blog/tree/master/ubuntu)的setting\n-  我又加了一个插件使得tmux在重启之后状态可以恢复:\n    -   主要参考这个[知乎教程](https://zhuanlan.zhihu.com/p/24660412)\n    -   <pre><code>git clone https://github.com/tmux-plugins/tmux-resurrect ~/tmux_tmp\n        </code></pre>\n    -   在~/.tmux.conf.local里面加上:\n        <pre><code>run-shell ~/tmux_tmp/resurrect.tmux\n        </code></pre>\n    -   最后载入这个配置：<pre><code>tmux source-file ~/.tmux.conf\n        </code></pre>\n\n##### vim的美化\n-   使用啦懒人vim: spf13-vim美化\n-   请看[相关内容](https://github.com/larryytr/Note_for_blog/tree/master/ubuntu)的setting，找到并且下载spf13-vim.sh,然后bash spf13-vim.sh\n-   我的配置同样在[相关内容](https://github.com/larryytr/Note_for_blog/tree/master/ubuntu)的setting里面;\n-   这个时候的vim没有办法和系统剪切版交互,我根据https://www.cnblogs.com/memory4young/p/could-not-use-system-clipboard-in-vim.html 下载了其他一些插件:\n    <pre><code>sudo apt-get install vim-scripts vim-gtk vim-gnome</pre></code>\n    这样 vim --version|grep \"cliboard\" 会看到 +clipboard;\n    然后就可以用+y,+p实现系统剪切版和vim剪切版的交互啦！\n\n#### 其他内容:\n- OSlab还需要:\n  - sudo apt-get install curl\n  - sudo apt-get install gcc-multilib\n- git 配置请搜索廖雪峰\n- ctags 可以参考Mengzelev的[博客](https://mengzelev.github.io/2018/10/04/pa-inspirations/)\n-   感谢xnr给我推荐的network来查看linux的运行情况\n    -   这是netdata的官方网站:https://github.com/netdata/netdata#user-base\n    -   但是由于GFW,安装会出现报错,事实上需要终端翻墙才行\n    -   可以通过这篇[教程](https://blog.csdn.net/zhangvalue/article/details/80270169)\n        <pre><code> sudo apt-get install net-tools\n          ifconfig\n        </code></pre>\n        查看inet 之后的内容来得知自己的server_ip\n    -   成功之后,进入 http://127.0.0.1:19999/ (:19999前面的是自己的server_ip地址,请按需要更改),得到炫酷的体验\n    -   相应配置可以参考这篇[博客](https://cloud.tencent.com/developer/article/1181577)或者自己搜索\n-   OSlab的kvm bug处理方法：https://bugzilla.redhat.com/show_bug.cgi?id=1479558\n    <pre><code>chmod 666 /dev/kvm to get it working right now. Then to fix future reboots, create a file /lib/udev/rules.d/99-kvm.rules with this content:\n    KERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\"</code></pre>\n-   texlive 安装\n    <pre><code>sudo apt install texlive-full</code></pre>\n    相关的vscode配置可以抄我的[setting](https://github.com/larryytr/Note_for_blog/tree/master/setting)\n    vscode的保存即编译请<pre><code>Ctrl+Shift+p,搜索setting,搜索Build,Latex-workshop › Synctex › After Build: Enabled打勾；</code></pre>\n-   ubuntu的截图:我参考了这篇[博客](https://blog.csdn.net/qq_17448289/article/details/56480805)\n    -   打开右上角的设置-->设备-->键盘-->快捷键,点击+\n    -   显然的配置好按键,然后在命令里面写<pre><code>gnome-screenshot -a</code></pre>\n    -   hint:上面的命令终端输入也有效\n        截屏的图在文件夹的图片(picture)里面;\n\n#### To be continued\n-   有空再研究怎么换主题;\n","slug":"ubuntu-back","published":1,"updated":"2020-01-24T07:42:44.138Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke464cry0009t8v2dkk16rtj","content":"<h2 id=\"反思\"><a href=\"#反思\" class=\"headerlink\" title=\"反思\"></a>反思</h2><ul>\n<li>之前崩的原因是搜狗输入法安装的时候没有提前安装fcix框架,导致乱码然后系统就傻掉了;</li>\n<li>重装很多次的原因是因为没有在重装之前完全的格式化分区,我建议每一次玩具坏了都要用windows格式化一次呜呜呜</li>\n</ul>\n<h2 id=\"复活操作\"><a href=\"#复活操作\" class=\"headerlink\" title=\"复活操作\"></a>复活操作</h2><h4 id=\"基本配置\"><a href=\"#基本配置\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h4><ul>\n<li>管理员权限,换源,安装vim  <pre><code>  sudo passwd(修改sudo密码)\n  sudo apt-get update\n  sudo apt-get install vim\n  </code></pre></li>\n<li>更换国内源,这里我选择的是<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\" target=\"_blank\" rel=\"noopener\">清华源</a>用下面的命令打开文件,并且注释里面的所有内容,<br> <pre><code> sudo vim /etc/apt/sources.list<br></code></pre> <ul>\n<li>然后粘贴下面的内容到打开的文件里面<br><pre><code># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释<br>deb <a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic main restricted universe multiverse<br>deb <a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-updates main restricted universe multiverse<br>deb <a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-backports main restricted universe multiverse<br>deb <a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-security main restricted universe multiverse<br></code></pre><br>如果你学过vim,就知道:w :q的含义,如果没有可以在终端使用vimtutor学习一下;</li>\n</ul>\n</li>\n<li>安装搜狗输入法(之前几次都因为它炸了我不信了……)，我参考了这一篇<a href=\"https://blog.csdn.net/qq_33159059/article/details/85019467\" target=\"_blank\" rel=\"noopener\">博客</a></li>\n<li>然后搭建基本的C语言环境,主要参考啦蒋老师的PA讲义<pre><code>su\napt-get install build-essential\napt-get install man                # on-line reference manual\napt-get install gcc-doc            # manual for GCC\napt-get install gdb                # GNU debugger\napt-get install git                # reversion control system\napt-get install libreadline-dev    # a library to use compile the project later\napt-get install libsdl2-dev        # a library to use compile the project later\napt-get install qemu-system-x86    # QEMU\n</code></pre></li>\n<li>安装chrome:请使用bing搜索;用gmail同步很香;</li>\n</ul>\n<h4 id=\"科学的看世界\"><a href=\"#科学的看世界\" class=\"headerlink\" title=\"科学的看世界\"></a>科学的看世界</h4><ul>\n<li>我选择的是shadowsocks-libev(因为我qt5以及普通的pip安装的shadowsocks就没有成功过) <pre><code> mkdir shadowsocks\n cd shadowsocks\n touch shadowsocks.json\n vim shadowsocks.json\n </code></pre></li>\n<li>将下面的内容根据自己的配置放进去:<pre><code>\n{\n  \"server\":\"my_server_ip\",\n  \"server_port\":53450,\n  \"local_address\": \"127.0.0.1\",\n  \"local_port\":1080,\n  \"password\":\"密码\",\n  \"timeout\":300,\n  \"method\":\"aes-256-gcm\",\n  \"fast_open\": false\n}\n</code></pre></li>\n<li>然后: ss-local -c ~/shadowsocks/shadowsocks/json &amp;<br>自己测试一下有没有问题;</li>\n<li>感谢阿姨的提醒,我决定用别名+脚本来启动shadowsocks(因为每次开机输入上面的东西实在没有效率)：<ul>\n<li>先写一个自启动脚本：<pre><code> touch ~/.ssstart.sh\nvim ~/.ssstart.sh\n</code></pre>\n内容是:\n<pre><code>#!/bin/bash\nss-local -c ~/shadowsocks/shadowsocks.json \n</code></pre></li>\n<li>然后在终端里面起别名:<br><pre><code>vim ~/.bashrc<br>在末尾添加:<br>alias ss=’. ~/.ssstart.sh’<br>:wq 保存,退出<br>在终端里面:<br>source ~/.bashrc<br>(如果是zsh:source ~/.zshrc)<br></code></pre><br>尝试一下在终端输入ss,它lei了;</li>\n</ul>\n</li>\n<li><p>因为后面的netdata需要<strong>终端</strong>翻墙,我也就尝试了一下,如果没有需求可以跳过这一步:</p>\n<ul>\n<li>主要参考的是谷歌出来的<a href=\"http://www.totorocyx.me/2018/10/02/ubuntu_shadowsocks/\" target=\"_blank\" rel=\"noopener\">网站</a></li>\n<li>首先用pip -V康康有没有pip,没有的话使用sudo apt-get install python-pip安装</li>\n<li><p>下面尝试全局代理(我也不确定能不能成功)：</p>\n<ul>\n<li>sudo pip install genpac</li>\n<li>选择安装配置文件的目录,我选择的是:<pre><code>/home/larryytr/shadowsocks</code></pre></li>\n<li>然后执行以下命令:<pre><code>sudo genpac –proxy=”SOCKS5 127.0.0.1:1080” –gfwlist-proxy=”SOCKS5 127.0.0.1:1080” -o autoproxy.pac –gfwlist-url=”<a href=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;</a></code></pre></li>\n<li>下面是一句搬运,我没有遇到过:<pre><code>注意：如果报错“fetch gfwlist fail.online: <a href=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a> local:None”，可以使用后面的语句：sudo genpac –proxy=”SOCKS5 127.0.0.1:1080” -o autoproxy.pac –gfwlist-url=”<a href=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;</a><br></pre></code></li>\n<li>执行完之后,目录下面会有一个autoproxy.pac文件。</li>\n<li><p>然后在右上角,打开系统设置——网络——网络代理：“方法”选择“自动”，“配置URL”填写：</p>\n<pre><code>file:///home/larryytr/shadowsocks/autoproxy.pac (请根据自己的实际情况修改)</code></pre></li>\n</ul>\n</li>\n<li><p>然后使得终端也能使用代理。我们需要<strong>privoxy</strong>代理工具:</p>\n<ul>\n<li><p>安装很自然:sudo apt-get install privoxy</p>\n</li>\n<li><p>然后编辑配置文件<pre><code>sudo vim /etc/privoxy/config </pre></code></p>\n</li>\n<li><p>在文档中搜索(vim 使用/搜索)“<strong>listen-address</strong>”（即监听地址），找到如下一行：<strong>listen-address localhost:8118</strong> 确保它没有被注释（如果这一行有#号，就手动删除）。再查找“<strong>forward-socks5t</strong>”，找到如下一行：<strong>forward-socks5t / 127.0.0.1:1080</strong> . 同样确保它没有被注释。如果没有这一行，就手动添加（注意！句尾那个点 . 是要写的！）。然后保存退出，再执行以下命令启动privoxy：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo privoxy --user privoxy &#x2F;etc&#x2F;privoxy&#x2F;config</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>最后，再配置/etc/profile：<pre><code></p>\n<pre><code># 先进入编辑模式\n</code></pre><p>sudo vim /etc/profile</p>\n<pre><code># 在末尾添加以下三行：\n</code></pre><p>export http_proxy=<a href=\"http://127.0.0.1:8118\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8118</a><br>export https_proxy=<a href=\"http://127.0.0.1:8118\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8118</a><br>export ftp_proxy=<a href=\"http://127.0.0.1:8118\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8118</a></p>\n<pre><code># 退出之后记得执行\nsource /etc/profile\n</code></pre><p></code></pre></p>\n</li>\n<li><p>验证是否成功:curl <a href=\"http://www.google.com或wget\" target=\"_blank\" rel=\"noopener\">www.google.com或wget</a> <a href=\"http://www.google.com判断是否可以访问\" target=\"_blank\" rel=\"noopener\">www.google.com判断是否可以访问</a></p>\n</li>\n<li><p>HINT(请务必注意):使用proxy的时候没有办法提交os作业,要make submit之前,先进入配置文件(/etc/privoxy/config)把刚刚做的事情给注释掉,然后用上面的命令重启privoxy,最后就可以提交了！！！</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"优化美化\"><a href=\"#优化美化\" class=\"headerlink\" title=\"优化美化\"></a>优化美化</h4><ul>\n<li>官网安装网易云</li>\n<li>官网安装vscode</li>\n<li>配置zsh,tmux,vim:</li>\n</ul>\n<h5 id=\"zsh安装与美化\"><a href=\"#zsh安装与美化\" class=\"headerlink\" title=\"zsh安装与美化\"></a>zsh安装与美化</h5><ul>\n<li>学习了:<a href=\"https://www.sysgeek.cn/install-zsh-shell-ubuntu-18-04/\" target=\"_blank\" rel=\"noopener\">https://www.sysgeek.cn/install-zsh-shell-ubuntu-18-04/</a><br><a href=\"https://segmentfault.com/a/1190000013612471这两篇教程\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000013612471这两篇教程</a>;</li>\n<li>感谢何伟的配置文件;</li>\n<li>相应的setting请参考我的github<a href=\"https://github.com/larryytr/Note_for_blog/tree/master/ubuntu\" target=\"_blank\" rel=\"noopener\">相关内容</a>.</li>\n<li>安装zsh:<pre><code>sudo apt-get update\nsudo apt-get install zsh\nchsh -s /bin/zsh (设置zsh为默认)\n</code></pre></li>\n<li>重启你的ubuntu</li>\n<li>安装oh-my-zsh插件:<pre><code> wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh\n</code></pre></li>\n<li>不改theme一无所有</li>\n<li>准备使用powerline主题  </li>\n<li>首先安装powerline字体：<pre><code>\ngit clone https://github.com/powerline/fonts.git --depth=1\n# install\ncd fonts\n./install.sh\n# clean-up a bit\ncd ..\nrm -rf fonts\n</code></pre></li>\n<li>安装完字体之后要记得使用：终端-编辑-首选项-文本-文本外观-自定义字体打勾-选一个带有powerline的。(星际玩家找了好久)</li>\n<li>安装powerline: sudo apt install powerline </li>\n<li>我的配置见<a href=\"https://github.com/larryytr/Note_for_blog/tree/master/ubuntu\" target=\"_blank\" rel=\"noopener\">相关内容</a>的setting .zshrc</li>\n<li>颜色选择困难请: <pre><code>for code ({000..255}) print -P – “$code: %F{$code}This is how your text would look like%f”</code></pre></li>\n<li>改完请source ~/.zshrc</li>\n</ul>\n<h5 id=\"tmux\"><a href=\"#tmux\" class=\"headerlink\" title=\"tmux\"></a>tmux</h5><ul>\n<li>tmux是一个很优秀的分屏软件,介绍可以看jyy的PA讲义以及自己搜索教程;</li>\n<li>我使用了何伟的配置,具体见<a href=\"https://github.com/larryytr/Note_for_blog/tree/master/ubuntu\" target=\"_blank\" rel=\"noopener\">相关内容</a>的setting</li>\n<li>我又加了一个插件使得tmux在重启之后状态可以恢复:<ul>\n<li>主要参考这个<a href=\"https://zhuanlan.zhihu.com/p/24660412\" target=\"_blank\" rel=\"noopener\">知乎教程</a></li>\n<li><pre><code>git clone https://github.com/tmux-plugins/tmux-resurrect ~/tmux_tmp\n</code></pre></li>\n<li>在~/.tmux.conf.local里面加上:<pre><code>run-shell ~/tmux_tmp/resurrect.tmux\n</code></pre></li>\n<li>最后载入这个配置：<pre><code>tmux source-file ~/.tmux.conf<br></code></pre></li>\n</ul>\n</li>\n</ul>\n<h5 id=\"vim的美化\"><a href=\"#vim的美化\" class=\"headerlink\" title=\"vim的美化\"></a>vim的美化</h5><ul>\n<li>使用啦懒人vim: spf13-vim美化</li>\n<li>请看<a href=\"https://github.com/larryytr/Note_for_blog/tree/master/ubuntu\" target=\"_blank\" rel=\"noopener\">相关内容</a>的setting，找到并且下载spf13-vim.sh,然后bash spf13-vim.sh</li>\n<li>我的配置同样在<a href=\"https://github.com/larryytr/Note_for_blog/tree/master/ubuntu\" target=\"_blank\" rel=\"noopener\">相关内容</a>的setting里面;</li>\n<li>这个时候的vim没有办法和系统剪切版交互,我根据<a href=\"https://www.cnblogs.com/memory4young/p/could-not-use-system-clipboard-in-vim.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/memory4young/p/could-not-use-system-clipboard-in-vim.html</a> 下载了其他一些插件:<br><pre><code>sudo apt-get install vim-scripts vim-gtk vim-gnome</pre></code><br>这样 vim –version|grep “cliboard” 会看到 +clipboard;<br>然后就可以用+y,+p实现系统剪切版和vim剪切版的交互啦！</li>\n</ul>\n<h4 id=\"其他内容\"><a href=\"#其他内容\" class=\"headerlink\" title=\"其他内容:\"></a>其他内容:</h4><ul>\n<li>OSlab还需要:<ul>\n<li>sudo apt-get install curl</li>\n<li>sudo apt-get install gcc-multilib</li>\n</ul>\n</li>\n<li>git 配置请搜索廖雪峰</li>\n<li>ctags 可以参考Mengzelev的<a href=\"https://mengzelev.github.io/2018/10/04/pa-inspirations/\" target=\"_blank\" rel=\"noopener\">博客</a></li>\n<li>感谢xnr给我推荐的network来查看linux的运行情况<ul>\n<li>这是netdata的官方网站:<a href=\"https://github.com/netdata/netdata#user-base\" target=\"_blank\" rel=\"noopener\">https://github.com/netdata/netdata#user-base</a></li>\n<li>但是由于GFW,安装会出现报错,事实上需要终端翻墙才行</li>\n<li>可以通过这篇<a href=\"https://blog.csdn.net/zhangvalue/article/details/80270169\" target=\"_blank\" rel=\"noopener\">教程</a><br><pre><code> sudo apt-get install net-tools<br>  ifconfig<br></code></pre><br>查看inet 之后的内容来得知自己的server_ip</li>\n<li>成功之后,进入 <a href=\"http://127.0.0.1:19999/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:19999/</a> (:19999前面的是自己的server_ip地址,请按需要更改),得到炫酷的体验</li>\n<li>相应配置可以参考这篇<a href=\"https://cloud.tencent.com/developer/article/1181577\" target=\"_blank\" rel=\"noopener\">博客</a>或者自己搜索</li>\n</ul>\n</li>\n<li>OSlab的kvm bug处理方法：<a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1479558\" target=\"_blank\" rel=\"noopener\">https://bugzilla.redhat.com/show_bug.cgi?id=1479558</a><pre><code>chmod 666 /dev/kvm to get it working right now. Then to fix future reboots, create a file /lib/udev/rules.d/99-kvm.rules with this content:\nKERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\"</code></pre></li>\n<li>texlive 安装<pre><code>sudo apt install texlive-full</code></pre>\n相关的vscode配置可以抄我的[setting](https://github.com/larryytr/Note_for_blog/tree/master/setting)\nvscode的保存即编译请<pre><code>Ctrl+Shift+p,搜索setting,搜索Build,Latex-workshop › Synctex › After Build: Enabled打勾；</code></pre></li>\n<li>ubuntu的截图:我参考了这篇<a href=\"https://blog.csdn.net/qq_17448289/article/details/56480805\" target=\"_blank\" rel=\"noopener\">博客</a><ul>\n<li>打开右上角的设置–&gt;设备–&gt;键盘–&gt;快捷键,点击+</li>\n<li>显然的配置好按键,然后在命令里面写<pre><code>gnome-screenshot -a</code></pre></li>\n<li>hint:上面的命令终端输入也有效<br>截屏的图在文件夹的图片(picture)里面;</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"To-be-continued\"><a href=\"#To-be-continued\" class=\"headerlink\" title=\"To be continued\"></a>To be continued</h4><ul>\n<li>有空再研究怎么换主题;</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"反思\"><a href=\"#反思\" class=\"headerlink\" title=\"反思\"></a>反思</h2><ul>\n<li>之前崩的原因是搜狗输入法安装的时候没有提前安装fcix框架,导致乱码然后系统就傻掉了;</li>\n<li>重装很多次的原因是因为没有在重装之前完全的格式化分区,我建议每一次玩具坏了都要用windows格式化一次呜呜呜</li>\n</ul>\n<h2 id=\"复活操作\"><a href=\"#复活操作\" class=\"headerlink\" title=\"复活操作\"></a>复活操作</h2><h4 id=\"基本配置\"><a href=\"#基本配置\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h4><ul>\n<li>管理员权限,换源,安装vim  <pre><code>  sudo passwd(修改sudo密码)\n  sudo apt-get update\n  sudo apt-get install vim\n  </code></pre></li>\n<li>更换国内源,这里我选择的是<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\" target=\"_blank\" rel=\"noopener\">清华源</a>用下面的命令打开文件,并且注释里面的所有内容,<br> <pre><code> sudo vim /etc/apt/sources.list<br></code></pre> <ul>\n<li>然后粘贴下面的内容到打开的文件里面<br><pre><code># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释<br>deb <a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic main restricted universe multiverse<br>deb <a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-updates main restricted universe multiverse<br>deb <a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-backports main restricted universe multiverse<br>deb <a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-security main restricted universe multiverse<br></code></pre><br>如果你学过vim,就知道:w :q的含义,如果没有可以在终端使用vimtutor学习一下;</li>\n</ul>\n</li>\n<li>安装搜狗输入法(之前几次都因为它炸了我不信了……)，我参考了这一篇<a href=\"https://blog.csdn.net/qq_33159059/article/details/85019467\" target=\"_blank\" rel=\"noopener\">博客</a></li>\n<li>然后搭建基本的C语言环境,主要参考啦蒋老师的PA讲义<pre><code>su\napt-get install build-essential\napt-get install man                # on-line reference manual\napt-get install gcc-doc            # manual for GCC\napt-get install gdb                # GNU debugger\napt-get install git                # reversion control system\napt-get install libreadline-dev    # a library to use compile the project later\napt-get install libsdl2-dev        # a library to use compile the project later\napt-get install qemu-system-x86    # QEMU\n</code></pre></li>\n<li>安装chrome:请使用bing搜索;用gmail同步很香;</li>\n</ul>\n<h4 id=\"科学的看世界\"><a href=\"#科学的看世界\" class=\"headerlink\" title=\"科学的看世界\"></a>科学的看世界</h4><ul>\n<li>我选择的是shadowsocks-libev(因为我qt5以及普通的pip安装的shadowsocks就没有成功过) <pre><code> mkdir shadowsocks\n cd shadowsocks\n touch shadowsocks.json\n vim shadowsocks.json\n </code></pre></li>\n<li>将下面的内容根据自己的配置放进去:<pre><code>\n{\n  \"server\":\"my_server_ip\",\n  \"server_port\":53450,\n  \"local_address\": \"127.0.0.1\",\n  \"local_port\":1080,\n  \"password\":\"密码\",\n  \"timeout\":300,\n  \"method\":\"aes-256-gcm\",\n  \"fast_open\": false\n}\n</code></pre></li>\n<li>然后: ss-local -c ~/shadowsocks/shadowsocks/json &amp;<br>自己测试一下有没有问题;</li>\n<li>感谢阿姨的提醒,我决定用别名+脚本来启动shadowsocks(因为每次开机输入上面的东西实在没有效率)：<ul>\n<li>先写一个自启动脚本：<pre><code> touch ~/.ssstart.sh\nvim ~/.ssstart.sh\n</code></pre>\n内容是:\n<pre><code>#!/bin/bash\nss-local -c ~/shadowsocks/shadowsocks.json \n</code></pre></li>\n<li>然后在终端里面起别名:<br><pre><code>vim ~/.bashrc<br>在末尾添加:<br>alias ss=’. ~/.ssstart.sh’<br>:wq 保存,退出<br>在终端里面:<br>source ~/.bashrc<br>(如果是zsh:source ~/.zshrc)<br></code></pre><br>尝试一下在终端输入ss,它lei了;</li>\n</ul>\n</li>\n<li><p>因为后面的netdata需要<strong>终端</strong>翻墙,我也就尝试了一下,如果没有需求可以跳过这一步:</p>\n<ul>\n<li>主要参考的是谷歌出来的<a href=\"http://www.totorocyx.me/2018/10/02/ubuntu_shadowsocks/\" target=\"_blank\" rel=\"noopener\">网站</a></li>\n<li>首先用pip -V康康有没有pip,没有的话使用sudo apt-get install python-pip安装</li>\n<li><p>下面尝试全局代理(我也不确定能不能成功)：</p>\n<ul>\n<li>sudo pip install genpac</li>\n<li>选择安装配置文件的目录,我选择的是:<pre><code>/home/larryytr/shadowsocks</code></pre></li>\n<li>然后执行以下命令:<pre><code>sudo genpac –proxy=”SOCKS5 127.0.0.1:1080” –gfwlist-proxy=”SOCKS5 127.0.0.1:1080” -o autoproxy.pac –gfwlist-url=”<a href=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;</a></code></pre></li>\n<li>下面是一句搬运,我没有遇到过:<pre><code>注意：如果报错“fetch gfwlist fail.online: <a href=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a> local:None”，可以使用后面的语句：sudo genpac –proxy=”SOCKS5 127.0.0.1:1080” -o autoproxy.pac –gfwlist-url=”<a href=\"https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;</a><br></pre></code></li>\n<li>执行完之后,目录下面会有一个autoproxy.pac文件。</li>\n<li><p>然后在右上角,打开系统设置——网络——网络代理：“方法”选择“自动”，“配置URL”填写：</p>\n<pre><code>file:///home/larryytr/shadowsocks/autoproxy.pac (请根据自己的实际情况修改)</code></pre></li>\n</ul>\n</li>\n<li><p>然后使得终端也能使用代理。我们需要<strong>privoxy</strong>代理工具:</p>\n<ul>\n<li><p>安装很自然:sudo apt-get install privoxy</p>\n</li>\n<li><p>然后编辑配置文件<pre><code>sudo vim /etc/privoxy/config </pre></code></p>\n</li>\n<li><p>在文档中搜索(vim 使用/搜索)“<strong>listen-address</strong>”（即监听地址），找到如下一行：<strong>listen-address localhost:8118</strong> 确保它没有被注释（如果这一行有#号，就手动删除）。再查找“<strong>forward-socks5t</strong>”，找到如下一行：<strong>forward-socks5t / 127.0.0.1:1080</strong> . 同样确保它没有被注释。如果没有这一行，就手动添加（注意！句尾那个点 . 是要写的！）。然后保存退出，再执行以下命令启动privoxy：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo privoxy --user privoxy &#x2F;etc&#x2F;privoxy&#x2F;config</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>最后，再配置/etc/profile：<pre><code></p>\n<pre><code># 先进入编辑模式\n</code></pre><p>sudo vim /etc/profile</p>\n<pre><code># 在末尾添加以下三行：\n</code></pre><p>export http_proxy=<a href=\"http://127.0.0.1:8118\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8118</a><br>export https_proxy=<a href=\"http://127.0.0.1:8118\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8118</a><br>export ftp_proxy=<a href=\"http://127.0.0.1:8118\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8118</a></p>\n<pre><code># 退出之后记得执行\nsource /etc/profile\n</code></pre><p></code></pre></p>\n</li>\n<li><p>验证是否成功:curl <a href=\"http://www.google.com或wget\" target=\"_blank\" rel=\"noopener\">www.google.com或wget</a> <a href=\"http://www.google.com判断是否可以访问\" target=\"_blank\" rel=\"noopener\">www.google.com判断是否可以访问</a></p>\n</li>\n<li><p>HINT(请务必注意):使用proxy的时候没有办法提交os作业,要make submit之前,先进入配置文件(/etc/privoxy/config)把刚刚做的事情给注释掉,然后用上面的命令重启privoxy,最后就可以提交了！！！</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"优化美化\"><a href=\"#优化美化\" class=\"headerlink\" title=\"优化美化\"></a>优化美化</h4><ul>\n<li>官网安装网易云</li>\n<li>官网安装vscode</li>\n<li>配置zsh,tmux,vim:</li>\n</ul>\n<h5 id=\"zsh安装与美化\"><a href=\"#zsh安装与美化\" class=\"headerlink\" title=\"zsh安装与美化\"></a>zsh安装与美化</h5><ul>\n<li>学习了:<a href=\"https://www.sysgeek.cn/install-zsh-shell-ubuntu-18-04/\" target=\"_blank\" rel=\"noopener\">https://www.sysgeek.cn/install-zsh-shell-ubuntu-18-04/</a><br><a href=\"https://segmentfault.com/a/1190000013612471这两篇教程\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000013612471这两篇教程</a>;</li>\n<li>感谢何伟的配置文件;</li>\n<li>相应的setting请参考我的github<a href=\"https://github.com/larryytr/Note_for_blog/tree/master/ubuntu\" target=\"_blank\" rel=\"noopener\">相关内容</a>.</li>\n<li>安装zsh:<pre><code>sudo apt-get update\nsudo apt-get install zsh\nchsh -s /bin/zsh (设置zsh为默认)\n</code></pre></li>\n<li>重启你的ubuntu</li>\n<li>安装oh-my-zsh插件:<pre><code> wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh\n</code></pre></li>\n<li>不改theme一无所有</li>\n<li>准备使用powerline主题  </li>\n<li>首先安装powerline字体：<pre><code>\ngit clone https://github.com/powerline/fonts.git --depth=1\n# install\ncd fonts\n./install.sh\n# clean-up a bit\ncd ..\nrm -rf fonts\n</code></pre></li>\n<li>安装完字体之后要记得使用：终端-编辑-首选项-文本-文本外观-自定义字体打勾-选一个带有powerline的。(星际玩家找了好久)</li>\n<li>安装powerline: sudo apt install powerline </li>\n<li>我的配置见<a href=\"https://github.com/larryytr/Note_for_blog/tree/master/ubuntu\" target=\"_blank\" rel=\"noopener\">相关内容</a>的setting .zshrc</li>\n<li>颜色选择困难请: <pre><code>for code ({000..255}) print -P – “$code: %F{$code}This is how your text would look like%f”</code></pre></li>\n<li>改完请source ~/.zshrc</li>\n</ul>\n<h5 id=\"tmux\"><a href=\"#tmux\" class=\"headerlink\" title=\"tmux\"></a>tmux</h5><ul>\n<li>tmux是一个很优秀的分屏软件,介绍可以看jyy的PA讲义以及自己搜索教程;</li>\n<li>我使用了何伟的配置,具体见<a href=\"https://github.com/larryytr/Note_for_blog/tree/master/ubuntu\" target=\"_blank\" rel=\"noopener\">相关内容</a>的setting</li>\n<li>我又加了一个插件使得tmux在重启之后状态可以恢复:<ul>\n<li>主要参考这个<a href=\"https://zhuanlan.zhihu.com/p/24660412\" target=\"_blank\" rel=\"noopener\">知乎教程</a></li>\n<li><pre><code>git clone https://github.com/tmux-plugins/tmux-resurrect ~/tmux_tmp\n</code></pre></li>\n<li>在~/.tmux.conf.local里面加上:<pre><code>run-shell ~/tmux_tmp/resurrect.tmux\n</code></pre></li>\n<li>最后载入这个配置：<pre><code>tmux source-file ~/.tmux.conf<br></code></pre></li>\n</ul>\n</li>\n</ul>\n<h5 id=\"vim的美化\"><a href=\"#vim的美化\" class=\"headerlink\" title=\"vim的美化\"></a>vim的美化</h5><ul>\n<li>使用啦懒人vim: spf13-vim美化</li>\n<li>请看<a href=\"https://github.com/larryytr/Note_for_blog/tree/master/ubuntu\" target=\"_blank\" rel=\"noopener\">相关内容</a>的setting，找到并且下载spf13-vim.sh,然后bash spf13-vim.sh</li>\n<li>我的配置同样在<a href=\"https://github.com/larryytr/Note_for_blog/tree/master/ubuntu\" target=\"_blank\" rel=\"noopener\">相关内容</a>的setting里面;</li>\n<li>这个时候的vim没有办法和系统剪切版交互,我根据<a href=\"https://www.cnblogs.com/memory4young/p/could-not-use-system-clipboard-in-vim.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/memory4young/p/could-not-use-system-clipboard-in-vim.html</a> 下载了其他一些插件:<br><pre><code>sudo apt-get install vim-scripts vim-gtk vim-gnome</pre></code><br>这样 vim –version|grep “cliboard” 会看到 +clipboard;<br>然后就可以用+y,+p实现系统剪切版和vim剪切版的交互啦！</li>\n</ul>\n<h4 id=\"其他内容\"><a href=\"#其他内容\" class=\"headerlink\" title=\"其他内容:\"></a>其他内容:</h4><ul>\n<li>OSlab还需要:<ul>\n<li>sudo apt-get install curl</li>\n<li>sudo apt-get install gcc-multilib</li>\n</ul>\n</li>\n<li>git 配置请搜索廖雪峰</li>\n<li>ctags 可以参考Mengzelev的<a href=\"https://mengzelev.github.io/2018/10/04/pa-inspirations/\" target=\"_blank\" rel=\"noopener\">博客</a></li>\n<li>感谢xnr给我推荐的network来查看linux的运行情况<ul>\n<li>这是netdata的官方网站:<a href=\"https://github.com/netdata/netdata#user-base\" target=\"_blank\" rel=\"noopener\">https://github.com/netdata/netdata#user-base</a></li>\n<li>但是由于GFW,安装会出现报错,事实上需要终端翻墙才行</li>\n<li>可以通过这篇<a href=\"https://blog.csdn.net/zhangvalue/article/details/80270169\" target=\"_blank\" rel=\"noopener\">教程</a><br><pre><code> sudo apt-get install net-tools<br>  ifconfig<br></code></pre><br>查看inet 之后的内容来得知自己的server_ip</li>\n<li>成功之后,进入 <a href=\"http://127.0.0.1:19999/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:19999/</a> (:19999前面的是自己的server_ip地址,请按需要更改),得到炫酷的体验</li>\n<li>相应配置可以参考这篇<a href=\"https://cloud.tencent.com/developer/article/1181577\" target=\"_blank\" rel=\"noopener\">博客</a>或者自己搜索</li>\n</ul>\n</li>\n<li>OSlab的kvm bug处理方法：<a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1479558\" target=\"_blank\" rel=\"noopener\">https://bugzilla.redhat.com/show_bug.cgi?id=1479558</a><pre><code>chmod 666 /dev/kvm to get it working right now. Then to fix future reboots, create a file /lib/udev/rules.d/99-kvm.rules with this content:\nKERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\"</code></pre></li>\n<li>texlive 安装<pre><code>sudo apt install texlive-full</code></pre>\n相关的vscode配置可以抄我的[setting](https://github.com/larryytr/Note_for_blog/tree/master/setting)\nvscode的保存即编译请<pre><code>Ctrl+Shift+p,搜索setting,搜索Build,Latex-workshop › Synctex › After Build: Enabled打勾；</code></pre></li>\n<li>ubuntu的截图:我参考了这篇<a href=\"https://blog.csdn.net/qq_17448289/article/details/56480805\" target=\"_blank\" rel=\"noopener\">博客</a><ul>\n<li>打开右上角的设置–&gt;设备–&gt;键盘–&gt;快捷键,点击+</li>\n<li>显然的配置好按键,然后在命令里面写<pre><code>gnome-screenshot -a</code></pre></li>\n<li>hint:上面的命令终端输入也有效<br>截屏的图在文件夹的图片(picture)里面;</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"To-be-continued\"><a href=\"#To-be-continued\" class=\"headerlink\" title=\"To be continued\"></a>To be continued</h4><ul>\n<li>有空再研究怎么换主题;</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cke464crc0003t8v2bksx9tov","category_id":"cke464crk0004t8v268bxbdxr","_id":"cke464crn0007t8v2bft33wae"},{"post_id":"cke464cry0009t8v2dkk16rtj","category_id":"cke464cs0000bt8v2djgs4q7c","_id":"cke464cs2000et8v24pxk0u9t"}],"PostTag":[{"post_id":"cke464crc0003t8v2bksx9tov","tag_id":"cke464crm0005t8v2ha8848gu","_id":"cke464crn0006t8v2bioa18nr"},{"post_id":"cke464cry0009t8v2dkk16rtj","tag_id":"cke464cs0000ct8v2b1925g4b","_id":"cke464cs2000dt8v25fdb9yru"}],"Tag":[{"name":"flag","_id":"cke464crm0005t8v2ha8848gu"},{"name":"教程","_id":"cke464cs0000ct8v2b1925g4b"}]}}